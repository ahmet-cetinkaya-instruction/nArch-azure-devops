trigger:
  branches:
    include:
      - main
      #- development

pool:
  name: 'OnDemandServer'
  #vmImage: 'ubuntu-lastest'

variables:
  dotnetConfiguration: 'Debug'
  dotnetSolution: '$(System.DefaultWorkingDirectory)/NArchAzureDevOps.sln'
  dotnetEnvironmentName: 'Development'

steps:
# Clone main

- task: CmdLine@2
  name: 'DownloadGitSubmodules'
  displayName: 'Download Git Submodules'
  inputs:
    script: 'git submodule update --init --recursive'

- task: NuGetToolInstaller@1
  name: 'InstallNuget'
  displayName: 'Install Nuget'

- task: NuGetCommand@2
  name: 'RestoreNugetPackages'
  displayName: 'Restore Nuget Packages'
  inputs:
    command: 'restore'
    restoreSolution: $(dotnetSolution)
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  name: 'RunTests'
  displayName: 'Run Tests'
  inputs:
    command: 'test'
    projects: '$(dotnetSolution)'
    arguments: '--configuration $(dotnetConfiguration)'

- task: DotNetCoreCLI@2
  name: 'PublishApp'
  displayName: 'Publish App'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(System.DefaultWorkingDirectory)/src/nArchAzureDevOps/WebAPI/WebAPI.csproj'
    arguments: '--configuration $(dotnetConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: false

- task: DotNetCoreCLI@2
  name: 'RestoreDotnetTools'
  displayName: 'Restore Dotnet Tools'
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'restore'

- task: DotNetCoreCLI@2
  inputs:
    command: 'custom'
    custom: 'ef'
    arguments: 'migrations script --project $(System.DefaultWorkingDirectory)/src/nArchAzureDevOps/Persistence/Persistence.csproj --context BaseDbContext --startup-project $(System.DefaultWorkingDirectory)/src/nArchAzureDevOps/WebAPI/WebAPI.csproj --idempotent --output $(Build.ArtifactStagingDirectory)/SQL/migration.sql -- --environment $(dotnetEnvironmentName)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'